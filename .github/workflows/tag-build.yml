name: Tag Release Build

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      DEPLOYMENT_NAME: ${{ vars.DEPLOYMENT_NAME }}
      SERVICE_NAME: ${{ vars.SERVICE_NAME }}
      IMAGE_TAG: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.13.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t akkharaphopmakanat/nxz-devops-pretest:$IMAGE_TAG \
            -f backend-apps/Dockerfile \
            --push backend-apps

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.11.3'

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra-code 

      - name: Delete existing Kubernetes resources
        run: |
          kubectl delete deployment $DEPLOYMENT_NAME || true
          kubectl delete svc $SERVICE_NAME || true

      - name: Terraform Plan
        run: terraform plan -var="deployment_name=$DEPLOYMENT_NAME" -var="service_name=$SERVICE_NAME" -var="image_tag=$IMAGE_TAG"
        working-directory: ./infra-code

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="deployment_name=$DEPLOYMENT_NAME" -var="service_name=$SERVICE_NAME" -var="image_tag=$IMAGE_TAG"
        working-directory: ./infra-code
