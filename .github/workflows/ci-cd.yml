name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
    build:
        runs-on: self-hosted
        env:
          DEPLOYMENT_NAME: ${{ vars.DEPLOYMENT_NAME }}
          SERVICE_NAME: ${{ vars.SERVICE_NAME }}

        steps:
        # Step 1: Checkout the code
          - name: Checkout code
            uses: actions/checkout@v2

        # Step 2: Set up Node.js
          - name: Set up Node.js
            uses: actions/setup-node@v2
            with:
                node-version: '22.13.1'

        # Step 3: Set up Docker Buildx
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2

        # Step 4: Log in to DockerHub
          - name: Log in to DockerHub
            uses: docker/login-action@v2
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PAT_TOKEN }}

        # Step 5: Build and push Docker image
          # - name: Build and push Docker image
          #   run: |
          #     docker buildx build \
          #       --platform linux/amd64,linux/arm64 \
          #       -t akkharaphopmakanat/nxz-devops-pretest:latest \
          #       -f backend-apps/Dockerfile \
          #       --push backend-apps

        # Step 6: Set up Terraform 
          - name: Set up Terraform
            uses: hashicorp/setup-terraform@v1
            with:
              terraform_version: '1.11.3'

        # Step 7: Initialize Terraform
          - name: Terraform Init
            run: terraform init
            working-directory: ./infra-code 

        # Step 7: Delete existing Kubernetes deployment and service
          - name: Delete existing Kubernetes resources
            run: |
              kubectl delete deployment $DEPLOYMENT_NAME  
              kubectl delete svc $SERVICE_NAME

        # Step 8: Terraform Plan
          - name: Terraform Plan
            run: terraform plan -var="deployment_name=$DEPLOYMENT_NAME " -var="service_name=$SERVICE_NAME"
            working-directory: ./infra-code

        # Step 9: Terraform Apply
          - name: Terraform Apply
            run: terraform apply -auto-approve -var="deployment_name=$DEPLOYMENT_NAME " -var="service_name=$SERVICE_NAME"
            working-directory: ./infra-code